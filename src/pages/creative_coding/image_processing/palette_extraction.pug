extends /components/layout.pug

block title
  title Color Quantization

block append script
  script(type='module').
    import execute from '@/scripts/creative_coding/image_processing/palette_extraction/index.js';

    const root = document.getElementById('palette-extraction');
    execute().start(
      root.querySelector('#canvas'),
      root.querySelector('#config'),
    );

block content
  h1 Palette Extraction
  #palette-extraction.preview-container
    canvas#canvas.border.border-primary.rounded.border-opacity-50(width='500', height='500')
    form.data-container#config
      label(for='image') Image:
      input#image(type='file', accept='image/*')
      br
      label(for='sample-size-cluster') Sampling size (clustering):
      input#sample-size-cluster(type='number', value='1000', min='1', step='1')
      br
      label(for='auto-target') Target Color Count:
      input#auto-target(type='number', value='0', min='0', step='1')
      button#autorun(type='button') Autorun
      br
      label(for='palette-count') Color Count:
      input#palette-count(type='number', value='0', min='0', step='1')
      details
        summary Palette:
          button#calc(type='button') Calculate
          button#snap(type='button') Snap to pixels
        textarea#palette-text
        div#palette
      br
      button#draw-raw(type='button') Draw (Raw)
      button#draw-quant(type='button') Quantize
      br
      label(for='sample-size-eval') Sampling size (evaluation):
      input#sample-size-eval(type='number', value='1000', min='0', step='1')
      wbr
      label(for='eval-iter') Iterations (evaluation):
      input#eval-iter(type='number', value='3', min='0', step='1')
      br
      label(for='simplify-a') Simplify Intracluster distance:
      input#simplify-a(type='checkbox')
      label(for='simplify-b') Simplify Intercluster distance:
      input#simplify-b(type='checkbox' checked)
      br
      label(for='palette-score') Silhouette Score:
      input#palette-score(type='number', value='0', readonly, disabled)
      button#eval(type='button') Evaluate

  p.
    In computer graphics, color quantization or color image quantization is quantization applied to color spaces;
    it is a process that reduces the number of distinct colors used in an image,
    usually with the intention that the new image should be as visually similar as possible to the original image.
